<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

  <!--配置前端控制器DispatcherServlet-->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--
      设置初始化参数: 指定默认的SpringMVC的配置文件
      默认SpringMVC读取的是WEB-INF目录下的 (DispatcherServlet的servlet-name)-servlet.xml
    -->
    <!--<init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-dispatcher.xml</param-value>
    </init-param>-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!--
    配置servlet路径映射
    /: 用来匹配所有的请求,但是/不会拦截jsp页面
    /*: 用来匹配所有的请求,会拦截jsp页面

    当配置为/的时候
    此时如果我们创建一个html页面之后,是武安请求到的,原因是:
    每个项目的web.xml文件会继承tomcat下的web.xml,而在tomcat的web.xml文件中(D:\apache\apache-tomcat-8.5.32\conf)包含了一个DefaultServlet的处理类
    用来处理静态资源,但是我们在编写自己的DispatcherServlet的时候使用了/的方式,此方式覆盖了父web.xml对于静态资源的处理
    所以此时所有的静态资源的访问也需要由DispatcherServlet来处理,但是我们并没有设置对应的Controller, 所以报404

    为什么jsp能处理呢?
    在父web.xml文件中包含了一个JSPServlet的处理类,会由tomcat进行处理,而不是我们定义的DispatcherServlet
  -->
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!-- /* 和 / 都是拦截所有请求, /拦截的请求不包含*.jsp, 而/*的范围更大,会拦截*.jsp这些请求-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--
    此过滤器完成请求方式的转换, 将POST请求转换成PUT、DELETE请求
    注意: 需要传递一个_method参数,值写PUT或DELETE
    可以看下HiddenHttpMethodFilter类中的doFilterInternal方法
  -->
  <filter>
    <filter-name>httpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>httpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>
